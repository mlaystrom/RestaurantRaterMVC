@model RestaurantDetail
@{
    ViewData["Title"] = Model.Name;
}

<h1>@Model.Name</h1>
<h2>Restaurant Detail</h2>
<!--Link to add a rating, the anchor tag takes us to the Rating Controller, Create Action and passes Model.Id as route parameter -->
<a asp-controller="Rating" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-link align-self-center">
    Add Rating
</a>
<a asp-controller="Rating" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-link align-self-center">
    Remove Rating
</a>
<hr>

<dl class="row">
    <dt class="col-sm-2">

        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class ="col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
     <dt class="col-sm-2">

        @Html.DisplayNameFor(model => model.Location)
    </dt>
    <dd class ="col-sm-10">
        @Html.DisplayFor(model => model.Location)
    </dd>
     <dt class="col-sm-2">

        @Html.DisplayNameFor(model => model.Score)
    </dt>
    <dd class ="col-sm-10">
        @Html.DisplayFor(model => model.Score)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Score)
    </dt>
    <dd class="col-sm-10">
        @if (Model.Score > 0)
        {
            @Html.DisplayFor(model => Model.Score)
        }
        else
        {
            <span class="text-muted">No Ratings Yet</span>
        }
    </dd>
</dl>
<!--Invoking the Component -->
@await Component.InvokeAsync(nameof(RestaurantRatings), new { restaurantId = Model.Id})
<div>
    <a asp-action="Index">Back to List üìÉ</a>
    <span>|</span>
    <a asp-action="Edit" asp-route-itemid="@Model.Id">Edit ‚úçÔ∏è</a>
</div>